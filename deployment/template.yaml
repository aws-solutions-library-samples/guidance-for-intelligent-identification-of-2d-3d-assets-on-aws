
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This template creates and deploys the resources needed for the AIML-powered 2D and 3D asset identification and management (SO9411) pipeline.

Parameters:
  DeploymentBucketName:
    Type: String
    Description: The name of the S3 bucket containing the deployment artifacts (e.g., Lambda function code).

Resources:
  ImageStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      LoggingConfiguration:
        DestinationBucketName:
          Ref: LoggingBucket
        LogFilePrefix: access-logs/

  ImageStoreBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ImageStoreBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource:
          - Fn::Sub: arn:aws:s3:::${ImageStoreBucket}/*
          Condition:
            Bool:
              aws:SecureTransport: false

  LoggingBucket:
    Type: AWS::S3::Bucket

  DeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: "${AWS::StackName}-deployment-bucket-${AWS::Region}-${AWS::AccountId}"
      AccessControl: Private

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: CustomLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - s3:GetObject
            - s3:PutObject
            - rekognition:DetectLabels
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:GetItem
            Resource:
            - Fn::Sub: arn:aws:s3:::${ImageStoreBucket}/*
            - Fn::Sub: arn:aws:s3:::${DeploymentBucket}/*
            - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AWS::StackName}-label-metadata
            - Fn::Sub: arn:aws:rekognition:${AWS::Region}:${AWS::AccountId}:*

  processImage:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: processImage
      Handler: index.mjs
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      CodeUri: src/processImage
      Runtime: nodejs18.x
      Environment:
        Variables:
          IMAGE_STORE_BUCKET:
            Ref: ImageStoreBucket
          LABEL_DATA_TABLE:
            Ref: LabelMetadataTable
      MemorySize: 128
      Timeout: 60

  processObject:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: processObject
      Handler: index.mjs
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      CodeUri: src/processObject
      Runtime: nodejs18.x
      Environment:
        Variables:
          IMAGE_STORE_BUCKET:
            Ref: ImageStoreBucket
          LABEL_DATA_TABLE:
            Ref: LabelMetadataTable
      MemorySize: 128
      Timeout: 60

  handleLabels:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: handleLabels
      Handler: index.mjs
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      CodeUri: src/handleLabels
      Runtime: nodejs18.x
      Environment:
        Variables:
          IMAGE_STORE_BUCKET:
            Ref: ImageStoreBucket
          LABEL_DATA_TABLE:
            Ref: LabelMetadataTable
      MemorySize: 128
      Timeout: 60

  ProcessImageS3Permission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - processImage
        - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - ImageStoreBucket
        - Arn

  LabelMetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${AWS::StackName}-label-metadata
      AttributeDefinitions:
      - AttributeName: LabelId
        AttributeType: S
      KeySchema:
      - AttributeName: LabelId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

Outputs:
  ImageStoreBucketName:
    Description: Name of the S3 bucket for image storage
    Value:
      Ref: ImageStoreBucket

  DeploymentBucketName:
    Description: Name of the dynamically created deployment bucket
    Value:
      Ref: DeploymentBucket

  ProcessImageLambdaARN:
    Description: ARN of the processImage Lambda function
    Value:
      Fn::GetAtt:
      - processImage
      - Arn

  LabelMetadataTableName:
    Description: Name of the Label Metadata DynamoDB table
    Value:
      Ref: LabelMetadataTable
